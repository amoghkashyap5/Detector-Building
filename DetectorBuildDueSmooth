/*
Detector Building
made by Jørgen Miller in Nov 2019
UHS Science Olympiad

USE
reads temperature in ºC using an analog temperature sensor
outputs voltage and temperature reading
turns on LEDs according to defined temperature ranges

SETUP
+5V -> temperature sensor -> A1
                          -> GND
D2 -> red LED -> 410Ω  -> GND
D3 -> green LED -> 410Ω  -> GND
D4 -> blue LED -> 410Ω  -> GND
*/

// sensor and LED pins
int analog_temp = 1;  // A1, output voltage of temperature sensor
int led_red = 2;      // D2, anode of red LED
int led_green = 3;    // D3, anode of green LED
int led_blue = 4;     // D4, anode of blue LED

// LED temperature ranges in ºC
int min_red = 00;
int max_red = 75;
int min_green = 20;
int max_green = 30;
int min_blue = 0;
int max_blue = 40;

//reference voltage (voltage to temp sensor)
float ref_voltage = 3.3;

//bits of resolution for analog readings
int resolution = 12;

//precision of serial monitor (decimal places)
int decimals = 4;

//calibrated equation
float m = 91.50655435;
float b = -40.89455821;

//variables used for smoothing
const int num_readings = 10;
int read_index = 0;
float temp_readings[num_readings];
float temp_total = 0;
float temp_smoothed = 0;

void setup() {  // runs on upload or press of reset button
  //declare LED pins to be outputs
  pinMode(led_red, OUTPUT);
  pinMode(led_green, OUTPUT);
  pinMode(led_blue, OUTPUT);

  //fill smoothing array with zeros
  for (int thisReading = 0; thisReading < num_readings; thisReading++) {
    temp_readings[thisReading] = 0;
  }

  //begin serial communication at 9600 bits per second
  Serial.begin(9600);

  //send labels for serial plotter
  Serial.print("Voltage (V)");
  Serial.print("\t");
  Serial.print("Temperature (ºC)");
  Serial.print("\t");
  Serial.println("Smoothed Temperature (ºC)");

  //Set source of reference voltage
  analogReadResolution(resolution);
}

void loop() { // runs over and over again
  float pin_value;
  float voltage;
  float temp;

  pin_value = analogRead(analog_temp);

  // read pin value and convert to V
  int scale = pow(2, resolution) - 1;
  voltage = ref_voltage * pin_value / scale;

  // read voltage from sensor and convert to ºC
  temp = m * voltage + b; // calibrated equation

  //smooth temperature
  temp_total -= temp_readings[read_index];
  temp_readings[read_index] = temp;
  temp_total += temp_readings[read_index];
  temp_smoothed = temp_total / num_readings;

  //increase index for smoothing array
  read_index ++;
  if (read_index >= num_readings) {read_index = 0;}

  // send temperature and voltage via serial communication
  Serial.print(voltage, decimals);
  Serial.print("\t");
  Serial.print(temp, decimals);
  Serial.print("\t");
  Serial.println(temp_smoothed, decimals);

  //turn off all LEDs
  digitalWrite(led_red, LOW);
  digitalWrite(led_green, LOW);
  digitalWrite(led_blue, LOW);

  //turn on LEDs if in their range
  //use <=, ==, or >= as needed
  if ((temp <= max_red) && (temp >= min_red)) {
    digitalWrite(led_red, HIGH);
  }
  if ((temp <= max_green) && (temp >= min_green)) {
    digitalWrite(led_green, HIGH);
  }
  if ((temp <= max_blue) && (temp >= min_blue)) {
    digitalWrite(led_blue, HIGH);
  }

  delay(100); // wait 0.2 seconds
}
